@model IEnumerable<AspnetCoreMvcFull.ViewModels.SubmittedReportViewModel>

@{
	ViewData["Title"] = "Submitted Bin Reports";
}

<div class="container mt-4">
	<div class="d-flex justify-content-between align-items-center mb-4">
		<h2><i class="fas fa-list-alt me-2"></i>Submitted Bin Reports</h2>
		<div class="btn-group">
			<button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
				<i class="fas fa-filter me-2"></i>Filter by Status
			</button>
			<ul class="dropdown-menu">
				<li><a class="dropdown-item" href="#" onclick="filterByStatus('all')">All Reports</a></li>
				<li><a class="dropdown-item" href="#" onclick="filterByStatus('pending')">Pending</a></li>
				<li><a class="dropdown-item" href="#" onclick="filterByStatus('acknowledged')">Acknowledged</a></li>
				<li><a class="dropdown-item" href="#" onclick="filterByStatus('resolved')">Resolved</a></li>
				<li><a class="dropdown-item" href="#" onclick="filterByStatus('closed')">Closed</a></li>
			</ul>
		</div>
	</div>

	@if (Model.Any())
	{
		<div class="card">
			<div class="card-body">
				<div class="table-responsive">
					<table class="table table-striped table-hover" id="reportsTable">
						<thead class="table-dark">
							<tr>
								<th>Bin Plate ID</th>
								<th>Client</th>
								<th>Severity</th> @* NEW: Severity Column *@
								<th>Status</th>
								<th>Reported At</th>
								<th>Reported By</th> @* NEW: Reported By Column *@
								<th>Description</th>
								<th>Issue Flag</th>
								<th>Image</th>
								<th>Actions</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var report in Model)
							{
								<tr data-status="@report.Status.ToLower()">
									<td>
										<strong class="text-primary">@report.BinPlateId</strong>
										<br>
										<small class="text-muted">@report.BinLocation</small>
									</td>
									<td>
										<span class="fw-bold">@report.ClientName</span>
									</td>
									@* NEW: Severity Column *@
									<td>
										@if (!string.IsNullOrEmpty(report.Severity))
										{
											@if (report.Severity == "Critical")
											{
												<span class="badge bg-danger">
													<i class="fas fa-exclamation-circle me-1"></i>Critical
												</span>
											}
											else if (report.Severity == "High")
											{
												<span class="badge bg-warning">
													<i class="fas fa-exclamation-triangle me-1"></i>High
												</span>
											}
											else if (report.Severity == "Medium")
											{
												<span class="badge bg-info">
													<i class="fas fa-info-circle me-1"></i>Medium
												</span>
											}
											else if (report.Severity == "Low")
											{
												<span class="badge bg-secondary">
													<i class="fas fa-minus me-1"></i>Low
												</span>
											}
										}
										else
										{
											<span class="text-muted">-</span>
										}
									</td>
									<td>
										<select class="form-select form-select-sm status-select"
												data-report-id="@report.CollectionRecordId"
												data-current-status="@report.Status">
											<option value="pending">Pending</option>
											<option value="acknowledged">Acknowledged</option>
											<option value="resolved">Resolved</option>
											<option value="closed">Closed</option>
										</select>
									</td>
									<td>
										<span class="fw-bold">@report.PickupTimestamp.ToString("MM/dd/yyyy")</span>
										<br>
										<small class="text-muted">@report.PickupTimestamp.ToString("hh:mm tt")</small>
									</td>
									@* NEW: Reported By Column *@
									<td>
										@if (!string.IsNullOrEmpty(report.ReportedBy))
										{
											<span>@report.ReportedBy</span>
											@if (report.AcknowledgedAt.HasValue)
											{
												<br>
												<small class="text-muted">
													Ack: @report.AcknowledgedAt.Value.ToString("MM/dd HH:mm")
												</small>
											}
										}
										else
										{
											<span class="text-muted">Unknown</span>
										}
									</td>
									<td>
										<div class="description-cell" style="max-width: 200px;">
											@if (!string.IsNullOrEmpty(report.Description))
											{
												<span class="description-preview">
													@(report.Description.Length > 50 ? report.Description.Substring(0, 50) + "..." : report.Description)
												</span>
												@if (report.Description.Length > 50)
												{
													<br>
													<small>
														<a href="#" class="text-primary" onclick="showFullDescription('@Html.Raw(Html.Encode(report.Description).Replace("'", "\\'"))', '@report.BinPlateId')">
															Read more...
														</a>
													</small>
												}
											}
											else
											{
												<em class="text-muted">No description</em>
											}
										</div>
									</td>
									<td class="text-center">
										@if (report.IsIssueReported)
										{
											<span class="badge bg-warning">
												<i class="fas fa-exclamation-triangle me-1"></i>Issue
											</span>
										}
										else
										{
											<span class="badge bg-success">
												<i class="fas fa-check me-1"></i>Normal
											</span>
										}
									</td>
									<td class="text-center">
										@if (!string.IsNullOrEmpty(report.ImageUrl))
										{
											<img src="@report.ImageUrl" alt="Bin Image" width="60" height="60"
												 class="img-thumbnail cursor-pointer"
												 onclick="showImageModal('@report.ImageUrl', '@report.BinPlateId')" />
										}
										else
										{
											<div class="text-muted">
												<i class="fas fa-image fa-2x"></i>
												<br>
												<small>No Image</small>
											</div>
										}
									</td>
									<td>
										<div class="btn-group-vertical">
											<a href="@Url.Action("Details", "BinReport", new { id = report.CollectionRecordId })"
											   class="btn btn-sm btn-outline-info mb-1">
												<i class="fas fa-eye me-1"></i>Details
											</a>
											@* NEW: Acknowledge Button *@
											@if (report.Status == "pending")
											{
												<button type="button" class="btn btn-sm btn-warning"
														onclick="acknowledgeReport('@report.CollectionRecordId', '@report.BinPlateId')">
													<i class="fas fa-check me-1"></i>Ack
												</button>
											}
										</div>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	}
	else
	{
		<div class="alert alert-info text-center">
			<i class="fas fa-info-circle me-2"></i>
			No bin reports have been submitted yet.
		</div>
	}
</div>

<!-- Image Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="imageModalLabel">Report Image</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body text-center">
				<img id="modalImage" src="/placeholder.svg" alt="Report Image" class="img-fluid" />
			</div>
		</div>
	</div>
</div>

<!-- Description Modal -->
<div class="modal fade" id="descriptionModal" tabindex="-1" aria-labelledby="descriptionModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="descriptionModalLabel">Full Description</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p id="fullDescriptionText"></p>
			</div>
		</div>
	</div>
</div>

@* NEW: Acknowledge Modal *@
<div class="modal fade" id="acknowledgeModal" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Acknowledge Report</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal"></button>
			</div>
			<form id="acknowledgeForm" method="post">
				<div class="modal-body">
					<p>Acknowledge report for <strong id="modalBinId"></strong>?</p>
					<div class="mb-3">
						<label class="form-label">Resolution Notes (Optional)</label>
						<textarea name="resolutionNotes" class="form-control" rows="3"
								  placeholder="Add resolution notes to mark as resolved..."></textarea>
						<div class="form-text">Leave empty to just acknowledge, or add notes to resolve completely.</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
					<button type="submit" class="btn btn-primary">Acknowledge</button>
				</div>
			</form>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		function showImageModal(imageUrl, binPlateId) {
			document.getElementById('modalImage').src = imageUrl;
			document.getElementById('imageModalLabel').textContent = `Report Image - ${binPlateId}`;
			new bootstrap.Modal(document.getElementById('imageModal')).show();
		}

		function showFullDescription(description, binPlateId) {
			document.getElementById('fullDescriptionText').textContent = description;
			document.getElementById('descriptionModalLabel').textContent = `Description - ${binPlateId}`;
			new bootstrap.Modal(document.getElementById('descriptionModal')).show();
		}

		@* NEW: Acknowledge function *@
		function acknowledgeReport(id, binId) {
			document.getElementById('modalBinId').textContent = binId;
			document.getElementById('acknowledgeForm').action = '/BinReport/Acknowledge/' + id;
			new bootstrap.Modal(document.getElementById('acknowledgeModal')).show();
		}

		function filterByStatus(status) {
			const rows = document.querySelectorAll('#reportsTable tbody tr');
			rows.forEach(row => {
				if (status === 'all' || row.getAttribute('data-status') === status) {
					row.style.display = '';
				} else {
					row.style.display = 'none';
				}
			});
		}

		// Status update functionality
		document.querySelectorAll('.status-select').forEach(select => {
			select.addEventListener('change', function() {
				const reportId = this.getAttribute('data-report-id');
				const newStatus = this.value;
				const currentStatus = this.getAttribute('data-current-status');

				if (newStatus !== currentStatus) {
					updateReportStatus(reportId, newStatus, this);
				}
			});
		});

		function updateReportStatus(reportId, status, selectElement) {
			fetch('@Url.Action("UpdateStatus")', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({
					id: reportId,
					status: status
				})
			})
			.then(response => response.json())
			.then(data => {
				if (data.success) {
					selectElement.setAttribute('data-current-status', status);
					selectElement.closest('tr').setAttribute('data-status', status.toLowerCase());
					// Show success message
					const alert = document.createElement('div');
					alert.className = 'alert alert-success alert-dismissible fade show position-fixed';
					alert.style.top = '20px';
					alert.style.right = '20px';
					alert.style.zIndex = '9999';
					alert.innerHTML = `
						<i class="fas fa-check-circle me-2"></i>Status updated successfully!
						<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
					`;
					document.body.appendChild(alert);
					setTimeout(() => {
						if (alert.parentNode) {
							alert.parentNode.removeChild(alert);
						}
					}, 3000);
				} else {
					alert('Error updating status: ' + data.message);
					selectElement.value = selectElement.getAttribute('data-current-status');
				}
			})
			.catch(error => {
				console.error('Error:', error);
				alert('Error updating status');
				selectElement.value = selectElement.getAttribute('data-current-status');
			});
		}

		// Set initial selected values for status dropdowns
		document.addEventListener('DOMContentLoaded', function() {
			document.querySelectorAll('.status-select').forEach(select => {
				const currentStatus = select.getAttribute('data-current-status');
				select.value = currentStatus;
			});
		});
	</script>
}
