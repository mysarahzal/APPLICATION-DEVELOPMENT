@model AspnetCoreMvcFull.Models.Schedule

@{
    ViewData["Title"] = "Edit Schedule";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title mb-0">
                        <i class="fas fa-edit"></i> Edit Schedule #@Model.Id
                    </h4>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle"></i> @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (ViewBag.ErrorMessage != null)
                    {
                        <div class="alert alert-danger">
                            @ViewBag.ErrorMessage
                        </div>
                    }

                    <form asp-action="Edit" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="CreatedAt" />

                        <div class="row">
                            <div class="col-md-6">
                                <!-- Route (Read-only in edit mode) -->
                                <div class="form-group mb-3">
                                    <label class="form-label">
                                        <i class="fas fa-route"></i> Route
                                    </label>
                                    <input type="text" class="form-control" value="@Model.Route?.Name" readonly />
                                    <input type="hidden" asp-for="RouteId" />
                                    <div class="form-text">Route cannot be changed in edit mode. Create a new schedule for different routes.</div>
                                </div>

                                <!-- Truck Dropdown -->
                                <div class="form-group mb-3">
                                    <label asp-for="TruckId" class="form-label">
                                        <i class="fas fa-truck"></i> Select Truck
                                    </label>
                                    <select asp-for="TruckId" class="form-select" required>
                                        <option value="">-- Select Truck --</option>
                                        @if (ViewBag.Trucks != null)
                                        {
                                            @foreach (var truck in ViewBag.Trucks)
                                            {
                                                <option value="@truck.Id" selected="@(truck.Id == Model.TruckId)">
                                                    @truck.LicensePlate - @truck.Model
                                                </option>
                                            }
                                        }
                                    </select>
                                    <span asp-validation-for="TruckId" class="text-danger"></span>
                                </div>

                                <!-- Collector Dropdown -->
                                <div class="form-group mb-3">
                                    <label asp-for="CollectorId" class="form-label">
                                        <i class="fas fa-user"></i> Select Collector
                                    </label>
                                    <select asp-for="CollectorId" class="form-select" required>
                                        <option value="">-- Select Collector --</option>
                                        @if (ViewBag.Collectors != null)
                                        {
                                            @foreach (var collector in ViewBag.Collectors)
                                            {
                                                <option value="@collector.Id" selected="@(collector.Id == Model.CollectorId)">
                                                    @collector.FirstName @collector.LastName (@collector.Role)
                                                </option>
                                            }
                                        }
                                    </select>
                                    <span asp-validation-for="CollectorId" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <!-- Start Time -->
                                <div class="form-group mb-3">
                                    <label asp-for="ScheduleStartTime" class="form-label">
                                        <i class="fas fa-clock"></i> Start Time
                                    </label>
                                    <input asp-for="ScheduleStartTime" class="form-control" type="datetime-local" required />
                                    <span asp-validation-for="ScheduleStartTime" class="text-danger"></span>
                                </div>

                                <!-- End Time -->
                                <div class="form-group mb-3">
                                    <label asp-for="ScheduleEndTime" class="form-label">
                                        <i class="fas fa-clock"></i> End Time
                                    </label>
                                    <input asp-for="ScheduleEndTime" class="form-control" type="datetime-local" required />
                                    <span asp-validation-for="ScheduleEndTime" class="text-danger"></span>
                                </div>

                                <!-- Status -->
                                <div class="form-group mb-3">
                                    <label asp-for="Status" class="form-label">
                                        <i class="fas fa-flag"></i> Status
                                    </label>
                                    <select asp-for="Status" class="form-select" required>
                                        <option value="Scheduled" selected="@(Model.Status == "Scheduled")">Scheduled</option>
                                        <option value="In Progress" selected="@(Model.Status == "In Progress")">In Progress</option>
                                        <option value="Completed" selected="@(Model.Status == "Completed")">Completed</option>
                                        <option value="Cancelled" selected="@(Model.Status == "Cancelled")">Cancelled</option>
                                    </select>
                                    <span asp-validation-for="Status" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Actual Times (if applicable) -->
                        @if (Model.Status == "In Progress" || Model.Status == "Completed")
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label asp-for="ActualStartTime" class="form-label">
                                            <i class="fas fa-play"></i> Actual Start Time
                                        </label>
                                        <input asp-for="ActualStartTime" class="form-control" type="datetime-local" />
                                        <span asp-validation-for="ActualStartTime" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                        <label asp-for="ActualEndTime" class="form-label">
                                            <i class="fas fa-stop"></i> Actual End Time
                                        </label>
                                        <input asp-for="ActualEndTime" class="form-control" type="datetime-local" />
                                        <span asp-validation-for="ActualEndTime" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Admin Notes -->
                        <div class="form-group mb-4">
                            <label asp-for="AdminNotes" class="form-label">
                                <i class="fas fa-sticky-note"></i> Admin Notes
                            </label>
                            <textarea asp-for="AdminNotes" class="form-control" rows="3" placeholder="Optional notes..."></textarea>
                            <span asp-validation-for="AdminNotes" class="text-danger"></span>
                        </div>

                        <!-- Submit Buttons -->
                        <div class="form-group d-flex gap-2 mb-4">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Update Schedule
                            </button>
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to List
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bin Management Section -->
    <div class="row mt-4">
        <div class="col-md-6">
            <!-- Current Collection Points -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-list"></i> Current Collection Points
                        <span class="badge bg-info ms-2">@Model.CollectionPoints.Count()</span>
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.CollectionPoints.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Order</th>
                                        <th>Bin ID</th>
                                        <th>Location</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="currentCollectionPoints">
                                    @foreach (var cp in Model.CollectionPoints.OrderBy(c => c.OrderInSchedule))
                                    {
                                        <tr id="cp-@cp.BinId">
                                            <td><span class="badge bg-primary">@cp.OrderInSchedule</span></td>
                                            <td><strong>@cp.Bin.BinPlateId</strong></td>
                                            <td>@cp.Bin.Location</td>
                                            <td>
                                                @if (cp.IsCollected)
                                                {
                                                    <span class="badge bg-success">Collected</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning">Pending</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!cp.IsCollected)
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-danger"
                                                            onclick="removeBinFromSchedule('@cp.BinId')"
                                                            title="Remove from schedule">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Collected</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i> No collection points in this schedule.
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <!-- Available Bins to Add -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-plus"></i> Available Bins in Route
                        <span class="badge bg-success ms-2">@ViewBag.AvailableBins?.Count</span>
                    </h5>
                </div>
                <div class="card-body">
                    @if (ViewBag.AvailableBins != null && ((List<AspnetCoreMvcFull.Models.RouteBins>)ViewBag.AvailableBins).Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Order</th>
                                        <th>Bin ID</th>
                                        <th>Location</th>
                                        <th>Fill Level</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="availableBins">
                                    @foreach (var rb in ViewBag.AvailableBins)
                                    {
                                        <tr id="ab-@rb.BinId">
                                            <td><span class="badge bg-secondary">@rb.OrderInRoute</span></td>
                                            <td><strong>@rb.Bin.BinPlateId</strong></td>
                                            <td>@rb.Bin.Location</td>
                                            <td>
                                                <div class="progress" style="width: 60px; height: 20px;">
                                                    <div class="progress-bar @(rb.Bin.FillLevel > 80 ? "bg-danger" : rb.Bin.FillLevel > 60 ? "bg-warning" : "bg-success")"
                                                         style="width: @rb.Bin.FillLevel%"></div>
                                                </div>
                                                <small>@rb.Bin.FillLevel%</small>
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-sm btn-outline-success"
                                                        onclick="addBinToSchedule('@rb.BinId', '@rb.Bin.BinPlateId', '@rb.Bin.Location', @rb.OrderInRoute)"
                                                        title="Add to schedule">
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle"></i> All bins from this route are already included in the schedule.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Add bin to schedule
        function addBinToSchedule(binId, binPlateId, location, orderInRoute) {
            $.post('@Url.Action("AddBinToSchedule", "Schedule")', {
                scheduleId: @Model.Id,
                binId: binId
            })
            .done(function(response) {
                if (response.success) {
                    // Remove from available bins
                    $('#ab-' + binId).remove();

                    // Add to current collection points
                    var newRow = `
                        <tr id="cp-${binId}">
                            <td><span class="badge bg-primary">${orderInRoute}</span></td>
                            <td><strong>${binPlateId}</strong></td>
                            <td>${location}</td>
                            <td><span class="badge bg-warning">Pending</span></td>
                            <td>
                                <button type="button" class="btn btn-sm btn-outline-danger"
                                        onclick="removeBinFromSchedule('${binId}')"
                                        title="Remove from schedule">
                                    <i class="fas fa-times"></i>
                                </button>
                            </td>
                        </tr>
                    `;

                    // Insert in correct order
                    var inserted = false;
                    $('#currentCollectionPoints tr').each(function() {
                        var currentOrder = parseInt($(this).find('.badge').text());
                        if (orderInRoute < currentOrder) {
                            $(this).before(newRow);
                            inserted = true;
                            return false;
                        }
                    });

                    if (!inserted) {
                        $('#currentCollectionPoints').append(newRow);
                    }

                    // Update badge counts
                    updateBadgeCounts();

                    // Show success message
                    showAlert('success', response.message);
                } else {
                    showAlert('danger', response.message);
                }
            })
            .fail(function() {
                showAlert('danger', 'Error adding bin to schedule');
            });
        }

        // Remove bin from schedule
        function removeBinFromSchedule(binId) {
            if (!confirm('Are you sure you want to remove this bin from the schedule?')) {
                return;
            }

            $.post('@Url.Action("RemoveBinFromSchedule", "Schedule")', {
                scheduleId: @Model.Id,
                binId: binId
            })
            .done(function(response) {
                if (response.success) {
                    // Remove from current collection points
                    var removedRow = $('#cp-' + binId);
                    var binPlateId = removedRow.find('strong').text();
                    var location = removedRow.find('td:nth-child(3)').text();
                    var orderInRoute = parseInt(removedRow.find('.badge').text());

                    removedRow.remove();

                    // Add back to available bins (you might want to reload this section)
                    location.reload(); // Simple approach - reload page to refresh available bins

                    showAlert('success', response.message);
                } else {
                    showAlert('danger', response.message);
                }
            })
            .fail(function() {
                showAlert('danger', 'Error removing bin from schedule');
            });
        }

        // Update badge counts
        function updateBadgeCounts() {
            var currentCount = $('#currentCollectionPoints tr').length;
            var availableCount = $('#availableBins tr').length;

            $('.card-header .badge').first().text(currentCount);
            $('.card-header .badge').last().text(availableCount);
        }

        // Show alert message
        function showAlert(type, message) {
            var alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-triangle'}"></i> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            $('.card-body').first().prepend(alertHtml);

            // Auto-dismiss after 3 seconds
            setTimeout(function() {
                $('.alert').fadeOut('slow');
            }, 3000);
        }
    </script>
}
